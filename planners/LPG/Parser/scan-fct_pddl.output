Terminals which are not used

   SITUATION_TOK
   BSITUATION_TOK


State 82 conflicts: 1 shift/reduce
State 89 conflicts: 1 reduce/reduce
State 106 conflicts: 1 reduce/reduce
State 124 conflicts: 1 shift/reduce
State 139 conflicts: 5 shift/reduce
State 141 conflicts: 6 shift/reduce
State 143 conflicts: 5 shift/reduce
State 145 conflicts: 5 shift/reduce
State 179 conflicts: 1 shift/reduce
State 181 conflicts: 1 shift/reduce
State 184 conflicts: 1 shift/reduce
State 187 conflicts: 1 shift/reduce
State 189 conflicts: 1 shift/reduce
State 191 conflicts: 1 shift/reduce
State 193 conflicts: 1 shift/reduce
State 195 conflicts: 1 shift/reduce
State 211 conflicts: 3 shift/reduce
State 213 conflicts: 4 shift/reduce
State 215 conflicts: 3 shift/reduce
State 217 conflicts: 3 shift/reduce


Grammar

    0 $accept: file $end

    1 file: /* empty */
    2     | problem_definition file

    3 @1: /* empty */

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 problem_name problem_defs CLOSE_PAREN

    5 problem_name: OPEN_PAREN PROBLEM_TOK NAME CLOSE_PAREN

    6 base_domain_name: OPEN_PAREN BDOMAIN_TOK NAME CLOSE_PAREN

    7 problem_defs: /* empty */
    8             | objects_def problem_defs
    9             | init_def problem_defs
   10             | goal_def problem_defs
   11             | base_domain_name problem_defs
   12             | require_def
   13             | metric_spec
   14             | length_spec

   15 objects_def: OPEN_PAREN OBJECTS_TOK typed_list_name CLOSE_PAREN

   16 @2: /* empty */

   17 init_def: OPEN_PAREN INIT_TOK @2 init_el_plus CLOSE_PAREN

   18 init_el_plus: init_el
   19             | init_el init_el_plus

   20 init_el: literal_name
   21        | OPEN_PAREN TIMED_EL_TOK number literal_name CLOSE_PAREN
   22        | OPEN_PAREN EQUAL_TOK f_head num_exp CLOSE_PAREN

   23 @3: /* empty */

   24 goal_def: OPEN_PAREN GOAL_TOK @3 adl_goal_description CLOSE_PAREN

   25 adl_goal_description: literal_term
   26                     | OPEN_PAREN AND_TOK adl_goal_description_star CLOSE_PAREN
   27                     | OPEN_PAREN OR_TOK adl_goal_description_star CLOSE_PAREN
   28                     | OPEN_PAREN NOT_TOK adl_goal_description CLOSE_PAREN
   29                     | OPEN_PAREN IMPLY_TOK adl_goal_description adl_goal_description CLOSE_PAREN
   30                     | OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN
   31                     | OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN
   32                     | f_comp

   33 f_comp: OPEN_PAREN binary_comp f_exp f_exp CLOSE_PAREN

   34 f_exp: num_exp
   35      | OPEN_PAREN MINUS_TOK f_exp CLOSE_PAREN
   36      | OPEN_PAREN MINUS_TOK f_exp f_exp CLOSE_PAREN
   37      | OPEN_PAREN PLUS_TOK f_exp f_exp CLOSE_PAREN
   38      | OPEN_PAREN MUL_TOK f_exp f_exp CLOSE_PAREN
   39      | OPEN_PAREN DIV_TOK f_exp f_exp CLOSE_PAREN
   40      | f_head

   41 f_head: OPEN_PAREN function_symbol term_star CLOSE_PAREN
   42       | function_symbol

   43 binary_comp: GREATER_TOK
   44            | LESS_THAN_TOK
   45            | EQUAL_TOK
   46            | GREATER_OR_EQUAL_TOK
   47            | LESS_THAN_OR_EQUAL_TOK

   48 num_exp: OPEN_PAREN MINUS_TOK num_exp CLOSE_PAREN
   49        | OPEN_PAREN MINUS_TOK num_exp num_exp CLOSE_PAREN
   50        | OPEN_PAREN PLUS_TOK num_exp num_exp CLOSE_PAREN
   51        | OPEN_PAREN MUL_TOK num_exp num_exp CLOSE_PAREN
   52        | OPEN_PAREN DIV_TOK num_exp num_exp CLOSE_PAREN
   53        | number

   54 number: INTVAL
   55       | FLOATVAL

   56 function_symbol: NAME

   57 adl_goal_description_star: /* empty */
   58                          | adl_goal_description adl_goal_description_star

   59 literal_term: OPEN_PAREN NOT_TOK atomic_formula_term CLOSE_PAREN
   60             | atomic_formula_term

   61 atomic_formula_term: OPEN_PAREN predicate term_star CLOSE_PAREN

   62 term_star: /* empty */
   63          | term term_star

   64 term: NAME
   65     | VARIABLE

   66 name_plus: NAME
   67          | NAME name_plus

   68 typed_list_name: /* empty */
   69                | NAME either name_plus CLOSE_PAREN typed_list_name
   70                | NAME type typed_list_name
   71                | NAME typed_list_name

   72 typed_list_variable: /* empty */
   73                    | VARIABLE either name_plus CLOSE_PAREN typed_list_variable
   74                    | VARIABLE type typed_list_variable
   75                    | VARIABLE typed_list_variable

   76 predicate: NAME
   77          | EQUAL_TOK

   78 literal_name: OPEN_PAREN NOT_TOK atomic_formula_name CLOSE_PAREN
   79             | atomic_formula_name

   80 atomic_formula_name: OPEN_PAREN predicate name_star CLOSE_PAREN

   81 name_star: /* empty */
   82          | NAME name_star

   83 metric_spec: OPEN_PAREN METRIC_TOK optimization ground_f_exp CLOSE_PAREN

   84 optimization: MINIMIZE_TOK
   85             | MAXIMIZE_TOK

   86 ground_f_exp: OPEN_PAREN MINUS_TOK ground_f_exp CLOSE_PAREN
   87             | OPEN_PAREN MINUS_TOK ground_f_exp ground_f_exp CLOSE_PAREN
   88             | OPEN_PAREN PLUS_TOK ground_f_exp ground_f_exp CLOSE_PAREN
   89             | OPEN_PAREN MUL_TOK ground_f_exp ground_f_exp CLOSE_PAREN
   90             | OPEN_PAREN DIV_TOK ground_f_exp ground_f_exp CLOSE_PAREN
   91             | num_exp
   92             | f_head
   93             | TOTAL_TIME_TOK
   94             | OPEN_PAREN ground_f_exp CLOSE_PAREN
   95             | OPEN_PAREN MINUS_TOK num_exp ground_f_exp CLOSE_PAREN
   96             | OPEN_PAREN MINUS_TOK ground_f_exp num_exp CLOSE_PAREN
   97             | OPEN_PAREN PLUS_TOK num_exp ground_f_exp CLOSE_PAREN
   98             | OPEN_PAREN PLUS_TOK ground_f_exp num_exp CLOSE_PAREN
   99             | OPEN_PAREN DIV_TOK num_exp ground_f_exp CLOSE_PAREN
  100             | OPEN_PAREN DIV_TOK ground_f_exp num_exp CLOSE_PAREN
  101             | OPEN_PAREN MUL_TOK num_exp ground_f_exp CLOSE_PAREN
  102             | OPEN_PAREN MUL_TOK ground_f_exp num_exp CLOSE_PAREN

  103 length_spec: OPEN_PAREN LENGTH_TOK ser_par CLOSE_PAREN

  104 ser_par: /* empty */
  105        | OPEN_PAREN SERIAL_TOK INTVAL CLOSE_PAREN
  106        | OPEN_PAREN PARALLEL_TOK INTVAL CLOSE_PAREN

  107 type: MINUS_TOK NAME

  108 either: MINUS_TOK OPEN_PAREN EITHER_TOK

  109 @4: /* empty */

  110 @5: /* empty */

  111 require_def: OPEN_PAREN REQUIREMENTS_TOK @4 NAME @5 require_key_star CLOSE_PAREN

  112 require_key_star: /* empty */

  113 @6: /* empty */

  114 require_key_star: NAME @6 require_key_star


Terminals, with rules where they appear

$end (0) 0
error (256)
DEFINE_TOK (258) 4
PROBLEM_TOK (259) 5
SITUATION_TOK (260)
BSITUATION_TOK (261)
OBJECTS_TOK (262) 15
BDOMAIN_TOK (263) 6
INIT_TOK (264) 17
GOAL_TOK (265) 24
AND_TOK (266) 26
NOT_TOK (267) 28 59 78
NAME (268) 5 6 56 64 66 67 69 70 71 76 82 107 111 114
VARIABLE (269) 65 73 74 75
EQUAL_TOK (270) 22 45 77
FORALL_TOK (271) 31
IMPLY_TOK (272) 29
OR_TOK (273) 27
EXISTS_TOK (274) 30
EITHER_TOK (275) 108
OPEN_PAREN (276) 4 5 6 15 17 21 22 24 26 27 28 29 30 31 33 35 36 37
    38 39 41 48 49 50 51 52 59 61 78 80 83 86 87 88 89 90 94 95 96
    97 98 99 100 101 102 103 105 106 108 111
CLOSE_PAREN (277) 4 5 6 15 17 21 22 24 26 27 28 29 30 31 33 35 36 37
    38 39 41 48 49 50 51 52 59 61 69 73 78 80 83 86 87 88 89 90 94
    95 96 97 98 99 100 101 102 103 105 106 111
REQUIREMENTS_TOK (278) 111
GREATER_OR_EQUAL_TOK (279) 46
LESS_THAN_OR_EQUAL_TOK (280) 47
INTVAL (281) 54 105 106
FLOATVAL (282) 55
PLUS_TOK (283) 37 50 88 97 98
MINUS_TOK (284) 35 36 48 49 86 87 95 96 107 108
MUL_TOK (285) 38 51 89 101 102
DIV_TOK (286) 39 52 90 99 100
GREATER_TOK (287) 43
LESS_THAN_TOK (288) 44
METRIC_TOK (289) 83
MINIMIZE_TOK (290) 84
MAXIMIZE_TOK (291) 85
LENGTH_TOK (292) 103
SERIAL_TOK (293) 105
PARALLEL_TOK (294) 106
TOTAL_TIME_TOK (295) 93
TIMED_EL_TOK (296) 21
UMINUS (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
file (44)
    on left: 1 2, on right: 0 2
problem_definition (45)
    on left: 4, on right: 2
@1 (46)
    on left: 3, on right: 4
problem_name (47)
    on left: 5, on right: 4
base_domain_name (48)
    on left: 6, on right: 11
problem_defs (49)
    on left: 7 8 9 10 11 12 13 14, on right: 4 8 9 10 11
objects_def (50)
    on left: 15, on right: 8
init_def (51)
    on left: 17, on right: 9
@2 (52)
    on left: 16, on right: 17
init_el_plus (53)
    on left: 18 19, on right: 17 19
init_el (54)
    on left: 20 21 22, on right: 18 19
goal_def (55)
    on left: 24, on right: 10
@3 (56)
    on left: 23, on right: 24
adl_goal_description (57)
    on left: 25 26 27 28 29 30 31 32, on right: 24 28 29 30 31 58
f_comp (58)
    on left: 33, on right: 32
f_exp (59)
    on left: 34 35 36 37 38 39 40, on right: 33 35 36 37 38 39
f_head (60)
    on left: 41 42, on right: 22 40 92
binary_comp (61)
    on left: 43 44 45 46 47, on right: 33
num_exp (62)
    on left: 48 49 50 51 52 53, on right: 22 34 48 49 50 51 52 91 95
    96 97 98 99 100 101 102
number (63)
    on left: 54 55, on right: 21 53
function_symbol (64)
    on left: 56, on right: 41 42
adl_goal_description_star (65)
    on left: 57 58, on right: 26 27 58
literal_term (66)
    on left: 59 60, on right: 25
atomic_formula_term (67)
    on left: 61, on right: 59 60
term_star (68)
    on left: 62 63, on right: 41 61 63
term (69)
    on left: 64 65, on right: 63
name_plus (70)
    on left: 66 67, on right: 67 69 73
typed_list_name (71)
    on left: 68 69 70 71, on right: 15 69 70 71
typed_list_variable (72)
    on left: 72 73 74 75, on right: 30 31 73 74 75
predicate (73)
    on left: 76 77, on right: 61 80
literal_name (74)
    on left: 78 79, on right: 20 21
atomic_formula_name (75)
    on left: 80, on right: 78 79
name_star (76)
    on left: 81 82, on right: 80 82
metric_spec (77)
    on left: 83, on right: 13
optimization (78)
    on left: 84 85, on right: 83
ground_f_exp (79)
    on left: 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102
   , on right: 83 86 87 88 89 90 94 95 96 97 98 99 100 101 102
length_spec (80)
    on left: 103, on right: 14
ser_par (81)
    on left: 104 105 106, on right: 103
type (82)
    on left: 107, on right: 70 74
either (83)
    on left: 108, on right: 69 73
require_def (84)
    on left: 111, on right: 12
@4 (85)
    on left: 109, on right: 111
@5 (86)
    on left: 110, on right: 111
require_key_star (87)
    on left: 112 114, on right: 111 114
@6 (88)
    on left: 113, on right: 114


state 0

    0 $accept: . file $end

    OPEN_PAREN  shift, and go to state 1

    $default  reduce using rule 1 (file)

    file                go to state 2
    problem_definition  go to state 3


state 1

    4 problem_definition: OPEN_PAREN . DEFINE_TOK @1 problem_name problem_defs CLOSE_PAREN

    DEFINE_TOK  shift, and go to state 4


state 2

    0 $accept: file . $end

    $end  shift, and go to state 5


state 3

    2 file: problem_definition . file

    OPEN_PAREN  shift, and go to state 1

    $default  reduce using rule 1 (file)

    file                go to state 6
    problem_definition  go to state 3


state 4

    4 problem_definition: OPEN_PAREN DEFINE_TOK . @1 problem_name problem_defs CLOSE_PAREN

    $default  reduce using rule 3 (@1)

    @1  go to state 7


state 5

    0 $accept: file $end .

    $default  accept


state 6

    2 file: problem_definition file .

    $default  reduce using rule 2 (file)


state 7

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 . problem_name problem_defs CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 8

    problem_name  go to state 9


state 8

    5 problem_name: OPEN_PAREN . PROBLEM_TOK NAME CLOSE_PAREN

    PROBLEM_TOK  shift, and go to state 10


state 9

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 problem_name . problem_defs CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 13
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16
    metric_spec       go to state 17
    length_spec       go to state 18
    require_def       go to state 19


state 10

    5 problem_name: OPEN_PAREN PROBLEM_TOK . NAME CLOSE_PAREN

    NAME  shift, and go to state 20


state 11

    6 base_domain_name: OPEN_PAREN . BDOMAIN_TOK NAME CLOSE_PAREN
   15 objects_def: OPEN_PAREN . OBJECTS_TOK typed_list_name CLOSE_PAREN
   17 init_def: OPEN_PAREN . INIT_TOK @2 init_el_plus CLOSE_PAREN
   24 goal_def: OPEN_PAREN . GOAL_TOK @3 adl_goal_description CLOSE_PAREN
   83 metric_spec: OPEN_PAREN . METRIC_TOK optimization ground_f_exp CLOSE_PAREN
  103 length_spec: OPEN_PAREN . LENGTH_TOK ser_par CLOSE_PAREN
  111 require_def: OPEN_PAREN . REQUIREMENTS_TOK @4 NAME @5 require_key_star CLOSE_PAREN

    OBJECTS_TOK       shift, and go to state 21
    BDOMAIN_TOK       shift, and go to state 22
    INIT_TOK          shift, and go to state 23
    GOAL_TOK          shift, and go to state 24
    REQUIREMENTS_TOK  shift, and go to state 25
    METRIC_TOK        shift, and go to state 26
    LENGTH_TOK        shift, and go to state 27


state 12

   11 problem_defs: base_domain_name . problem_defs

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 28
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16
    metric_spec       go to state 17
    length_spec       go to state 18
    require_def       go to state 19


state 13

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 problem_name problem_defs . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 29


state 14

    8 problem_defs: objects_def . problem_defs

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 30
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16
    metric_spec       go to state 17
    length_spec       go to state 18
    require_def       go to state 19


state 15

    9 problem_defs: init_def . problem_defs

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 31
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16
    metric_spec       go to state 17
    length_spec       go to state 18
    require_def       go to state 19


state 16

   10 problem_defs: goal_def . problem_defs

    OPEN_PAREN  shift, and go to state 11

    $default  reduce using rule 7 (problem_defs)

    base_domain_name  go to state 12
    problem_defs      go to state 32
    objects_def       go to state 14
    init_def          go to state 15
    goal_def          go to state 16
    metric_spec       go to state 17
    length_spec       go to state 18
    require_def       go to state 19


state 17

   13 problem_defs: metric_spec .

    $default  reduce using rule 13 (problem_defs)


state 18

   14 problem_defs: length_spec .

    $default  reduce using rule 14 (problem_defs)


state 19

   12 problem_defs: require_def .

    $default  reduce using rule 12 (problem_defs)


state 20

    5 problem_name: OPEN_PAREN PROBLEM_TOK NAME . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 33


state 21

   15 objects_def: OPEN_PAREN OBJECTS_TOK . typed_list_name CLOSE_PAREN

    NAME  shift, and go to state 34

    $default  reduce using rule 68 (typed_list_name)

    typed_list_name  go to state 35


state 22

    6 base_domain_name: OPEN_PAREN BDOMAIN_TOK . NAME CLOSE_PAREN

    NAME  shift, and go to state 36


state 23

   17 init_def: OPEN_PAREN INIT_TOK . @2 init_el_plus CLOSE_PAREN

    $default  reduce using rule 16 (@2)

    @2  go to state 37


state 24

   24 goal_def: OPEN_PAREN GOAL_TOK . @3 adl_goal_description CLOSE_PAREN

    $default  reduce using rule 23 (@3)

    @3  go to state 38


state 25

  111 require_def: OPEN_PAREN REQUIREMENTS_TOK . @4 NAME @5 require_key_star CLOSE_PAREN

    $default  reduce using rule 109 (@4)

    @4  go to state 39


state 26

   83 metric_spec: OPEN_PAREN METRIC_TOK . optimization ground_f_exp CLOSE_PAREN

    MINIMIZE_TOK  shift, and go to state 40
    MAXIMIZE_TOK  shift, and go to state 41

    optimization  go to state 42


state 27

  103 length_spec: OPEN_PAREN LENGTH_TOK . ser_par CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 43

    $default  reduce using rule 104 (ser_par)

    ser_par  go to state 44


state 28

   11 problem_defs: base_domain_name problem_defs .

    $default  reduce using rule 11 (problem_defs)


state 29

    4 problem_definition: OPEN_PAREN DEFINE_TOK @1 problem_name problem_defs CLOSE_PAREN .

    $default  reduce using rule 4 (problem_definition)


state 30

    8 problem_defs: objects_def problem_defs .

    $default  reduce using rule 8 (problem_defs)


state 31

    9 problem_defs: init_def problem_defs .

    $default  reduce using rule 9 (problem_defs)


state 32

   10 problem_defs: goal_def problem_defs .

    $default  reduce using rule 10 (problem_defs)


state 33

    5 problem_name: OPEN_PAREN PROBLEM_TOK NAME CLOSE_PAREN .

    $default  reduce using rule 5 (problem_name)


state 34

   69 typed_list_name: NAME . either name_plus CLOSE_PAREN typed_list_name
   70                | NAME . type typed_list_name
   71                | NAME . typed_list_name

    NAME       shift, and go to state 34
    MINUS_TOK  shift, and go to state 45

    $default  reduce using rule 68 (typed_list_name)

    typed_list_name  go to state 46
    type             go to state 47
    either           go to state 48


state 35

   15 objects_def: OPEN_PAREN OBJECTS_TOK typed_list_name . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 49


state 36

    6 base_domain_name: OPEN_PAREN BDOMAIN_TOK NAME . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 50


state 37

   17 init_def: OPEN_PAREN INIT_TOK @2 . init_el_plus CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 51

    init_el_plus         go to state 52
    init_el              go to state 53
    literal_name         go to state 54
    atomic_formula_name  go to state 55


state 38

   24 goal_def: OPEN_PAREN GOAL_TOK @3 . adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 56

    adl_goal_description  go to state 57
    f_comp                go to state 58
    literal_term          go to state 59
    atomic_formula_term   go to state 60


state 39

  111 require_def: OPEN_PAREN REQUIREMENTS_TOK @4 . NAME @5 require_key_star CLOSE_PAREN

    NAME  shift, and go to state 61


state 40

   84 optimization: MINIMIZE_TOK .

    $default  reduce using rule 84 (optimization)


state 41

   85 optimization: MAXIMIZE_TOK .

    $default  reduce using rule 85 (optimization)


state 42

   83 metric_spec: OPEN_PAREN METRIC_TOK optimization . ground_f_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 68
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 71


state 43

  105 ser_par: OPEN_PAREN . SERIAL_TOK INTVAL CLOSE_PAREN
  106        | OPEN_PAREN . PARALLEL_TOK INTVAL CLOSE_PAREN

    SERIAL_TOK    shift, and go to state 72
    PARALLEL_TOK  shift, and go to state 73


state 44

  103 length_spec: OPEN_PAREN LENGTH_TOK ser_par . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 74


state 45

  107 type: MINUS_TOK . NAME
  108 either: MINUS_TOK . OPEN_PAREN EITHER_TOK

    NAME        shift, and go to state 75
    OPEN_PAREN  shift, and go to state 76


state 46

   71 typed_list_name: NAME typed_list_name .

    $default  reduce using rule 71 (typed_list_name)


state 47

   70 typed_list_name: NAME type . typed_list_name

    NAME  shift, and go to state 34

    $default  reduce using rule 68 (typed_list_name)

    typed_list_name  go to state 77


state 48

   69 typed_list_name: NAME either . name_plus CLOSE_PAREN typed_list_name

    NAME  shift, and go to state 78

    name_plus  go to state 79


state 49

   15 objects_def: OPEN_PAREN OBJECTS_TOK typed_list_name CLOSE_PAREN .

    $default  reduce using rule 15 (objects_def)


state 50

    6 base_domain_name: OPEN_PAREN BDOMAIN_TOK NAME CLOSE_PAREN .

    $default  reduce using rule 6 (base_domain_name)


state 51

   21 init_el: OPEN_PAREN . TIMED_EL_TOK number literal_name CLOSE_PAREN
   22        | OPEN_PAREN . EQUAL_TOK f_head num_exp CLOSE_PAREN
   78 literal_name: OPEN_PAREN . NOT_TOK atomic_formula_name CLOSE_PAREN
   80 atomic_formula_name: OPEN_PAREN . predicate name_star CLOSE_PAREN

    NOT_TOK       shift, and go to state 80
    NAME          shift, and go to state 81
    EQUAL_TOK     shift, and go to state 82
    TIMED_EL_TOK  shift, and go to state 83

    predicate  go to state 84


state 52

   17 init_def: OPEN_PAREN INIT_TOK @2 init_el_plus . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 85


state 53

   18 init_el_plus: init_el .
   19             | init_el . init_el_plus

    OPEN_PAREN  shift, and go to state 51

    $default  reduce using rule 18 (init_el_plus)

    init_el_plus         go to state 86
    init_el              go to state 53
    literal_name         go to state 54
    atomic_formula_name  go to state 55


state 54

   20 init_el: literal_name .

    $default  reduce using rule 20 (init_el)


state 55

   79 literal_name: atomic_formula_name .

    $default  reduce using rule 79 (literal_name)


state 56

   26 adl_goal_description: OPEN_PAREN . AND_TOK adl_goal_description_star CLOSE_PAREN
   27                     | OPEN_PAREN . OR_TOK adl_goal_description_star CLOSE_PAREN
   28                     | OPEN_PAREN . NOT_TOK adl_goal_description CLOSE_PAREN
   29                     | OPEN_PAREN . IMPLY_TOK adl_goal_description adl_goal_description CLOSE_PAREN
   30                     | OPEN_PAREN . EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN
   31                     | OPEN_PAREN . FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN
   33 f_comp: OPEN_PAREN . binary_comp f_exp f_exp CLOSE_PAREN
   59 literal_term: OPEN_PAREN . NOT_TOK atomic_formula_term CLOSE_PAREN
   61 atomic_formula_term: OPEN_PAREN . predicate term_star CLOSE_PAREN

    AND_TOK                 shift, and go to state 87
    NOT_TOK                 shift, and go to state 88
    NAME                    shift, and go to state 81
    EQUAL_TOK               shift, and go to state 89
    FORALL_TOK              shift, and go to state 90
    IMPLY_TOK               shift, and go to state 91
    OR_TOK                  shift, and go to state 92
    EXISTS_TOK              shift, and go to state 93
    GREATER_OR_EQUAL_TOK    shift, and go to state 94
    LESS_THAN_OR_EQUAL_TOK  shift, and go to state 95
    GREATER_TOK             shift, and go to state 96
    LESS_THAN_TOK           shift, and go to state 97

    binary_comp  go to state 98
    predicate    go to state 99


state 57

   24 goal_def: OPEN_PAREN GOAL_TOK @3 adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 100


state 58

   32 adl_goal_description: f_comp .

    $default  reduce using rule 32 (adl_goal_description)


state 59

   25 adl_goal_description: literal_term .

    $default  reduce using rule 25 (adl_goal_description)


state 60

   60 literal_term: atomic_formula_term .

    $default  reduce using rule 60 (literal_term)


state 61

  111 require_def: OPEN_PAREN REQUIREMENTS_TOK @4 NAME . @5 require_key_star CLOSE_PAREN

    $default  reduce using rule 110 (@5)

    @5  go to state 101


state 62

   56 function_symbol: NAME .

    $default  reduce using rule 56 (function_symbol)


state 63

   41 f_head: OPEN_PAREN . function_symbol term_star CLOSE_PAREN
   48 num_exp: OPEN_PAREN . MINUS_TOK num_exp CLOSE_PAREN
   49        | OPEN_PAREN . MINUS_TOK num_exp num_exp CLOSE_PAREN
   50        | OPEN_PAREN . PLUS_TOK num_exp num_exp CLOSE_PAREN
   51        | OPEN_PAREN . MUL_TOK num_exp num_exp CLOSE_PAREN
   52        | OPEN_PAREN . DIV_TOK num_exp num_exp CLOSE_PAREN
   86 ground_f_exp: OPEN_PAREN . MINUS_TOK ground_f_exp CLOSE_PAREN
   87             | OPEN_PAREN . MINUS_TOK ground_f_exp ground_f_exp CLOSE_PAREN
   88             | OPEN_PAREN . PLUS_TOK ground_f_exp ground_f_exp CLOSE_PAREN
   89             | OPEN_PAREN . MUL_TOK ground_f_exp ground_f_exp CLOSE_PAREN
   90             | OPEN_PAREN . DIV_TOK ground_f_exp ground_f_exp CLOSE_PAREN
   94             | OPEN_PAREN . ground_f_exp CLOSE_PAREN
   95             | OPEN_PAREN . MINUS_TOK num_exp ground_f_exp CLOSE_PAREN
   96             | OPEN_PAREN . MINUS_TOK ground_f_exp num_exp CLOSE_PAREN
   97             | OPEN_PAREN . PLUS_TOK num_exp ground_f_exp CLOSE_PAREN
   98             | OPEN_PAREN . PLUS_TOK ground_f_exp num_exp CLOSE_PAREN
   99             | OPEN_PAREN . DIV_TOK num_exp ground_f_exp CLOSE_PAREN
  100             | OPEN_PAREN . DIV_TOK ground_f_exp num_exp CLOSE_PAREN
  101             | OPEN_PAREN . MUL_TOK num_exp ground_f_exp CLOSE_PAREN
  102             | OPEN_PAREN . MUL_TOK ground_f_exp num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    PLUS_TOK        shift, and go to state 102
    MINUS_TOK       shift, and go to state 103
    MUL_TOK         shift, and go to state 104
    DIV_TOK         shift, and go to state 105
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 68
    number           go to state 69
    function_symbol  go to state 106
    ground_f_exp     go to state 107


state 64

   54 number: INTVAL .

    $default  reduce using rule 54 (number)


state 65

   55 number: FLOATVAL .

    $default  reduce using rule 55 (number)


state 66

   93 ground_f_exp: TOTAL_TIME_TOK .

    $default  reduce using rule 93 (ground_f_exp)


state 67

   92 ground_f_exp: f_head .

    $default  reduce using rule 92 (ground_f_exp)


state 68

   91 ground_f_exp: num_exp .

    $default  reduce using rule 91 (ground_f_exp)


state 69

   53 num_exp: number .

    $default  reduce using rule 53 (num_exp)


state 70

   42 f_head: function_symbol .

    $default  reduce using rule 42 (f_head)


state 71

   83 metric_spec: OPEN_PAREN METRIC_TOK optimization ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 108


state 72

  105 ser_par: OPEN_PAREN SERIAL_TOK . INTVAL CLOSE_PAREN

    INTVAL  shift, and go to state 109


state 73

  106 ser_par: OPEN_PAREN PARALLEL_TOK . INTVAL CLOSE_PAREN

    INTVAL  shift, and go to state 110


state 74

  103 length_spec: OPEN_PAREN LENGTH_TOK ser_par CLOSE_PAREN .

    $default  reduce using rule 103 (length_spec)


state 75

  107 type: MINUS_TOK NAME .

    $default  reduce using rule 107 (type)


state 76

  108 either: MINUS_TOK OPEN_PAREN . EITHER_TOK

    EITHER_TOK  shift, and go to state 111


state 77

   70 typed_list_name: NAME type typed_list_name .

    $default  reduce using rule 70 (typed_list_name)


state 78

   66 name_plus: NAME .
   67          | NAME . name_plus

    NAME  shift, and go to state 78

    $default  reduce using rule 66 (name_plus)

    name_plus  go to state 112


state 79

   69 typed_list_name: NAME either name_plus . CLOSE_PAREN typed_list_name

    CLOSE_PAREN  shift, and go to state 113


state 80

   78 literal_name: OPEN_PAREN NOT_TOK . atomic_formula_name CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 114

    atomic_formula_name  go to state 115


state 81

   76 predicate: NAME .

    $default  reduce using rule 76 (predicate)


state 82

   22 init_el: OPEN_PAREN EQUAL_TOK . f_head num_exp CLOSE_PAREN
   77 predicate: EQUAL_TOK .

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 116

    NAME      [reduce using rule 77 (predicate)]
    $default  reduce using rule 77 (predicate)

    f_head           go to state 117
    function_symbol  go to state 70


state 83

   21 init_el: OPEN_PAREN TIMED_EL_TOK . number literal_name CLOSE_PAREN

    INTVAL    shift, and go to state 64
    FLOATVAL  shift, and go to state 65

    number  go to state 118


state 84

   80 atomic_formula_name: OPEN_PAREN predicate . name_star CLOSE_PAREN

    NAME  shift, and go to state 119

    $default  reduce using rule 81 (name_star)

    name_star  go to state 120


state 85

   17 init_def: OPEN_PAREN INIT_TOK @2 init_el_plus CLOSE_PAREN .

    $default  reduce using rule 17 (init_def)


state 86

   19 init_el_plus: init_el init_el_plus .

    $default  reduce using rule 19 (init_el_plus)


state 87

   26 adl_goal_description: OPEN_PAREN AND_TOK . adl_goal_description_star CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 56

    $default  reduce using rule 57 (adl_goal_description_star)

    adl_goal_description       go to state 121
    f_comp                     go to state 58
    adl_goal_description_star  go to state 122
    literal_term               go to state 59
    atomic_formula_term        go to state 60


state 88

   28 adl_goal_description: OPEN_PAREN NOT_TOK . adl_goal_description CLOSE_PAREN
   59 literal_term: OPEN_PAREN NOT_TOK . atomic_formula_term CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 56

    adl_goal_description  go to state 123
    f_comp                go to state 58
    literal_term          go to state 59
    atomic_formula_term   go to state 124


state 89

   45 binary_comp: EQUAL_TOK .
   77 predicate: EQUAL_TOK .

    NAME         reduce using rule 45 (binary_comp)
    NAME         [reduce using rule 77 (predicate)]
    VARIABLE     reduce using rule 77 (predicate)
    CLOSE_PAREN  reduce using rule 77 (predicate)
    $default     reduce using rule 45 (binary_comp)


state 90

   31 adl_goal_description: OPEN_PAREN FORALL_TOK . OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 125


state 91

   29 adl_goal_description: OPEN_PAREN IMPLY_TOK . adl_goal_description adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 56

    adl_goal_description  go to state 126
    f_comp                go to state 58
    literal_term          go to state 59
    atomic_formula_term   go to state 60


state 92

   27 adl_goal_description: OPEN_PAREN OR_TOK . adl_goal_description_star CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 56

    $default  reduce using rule 57 (adl_goal_description_star)

    adl_goal_description       go to state 121
    f_comp                     go to state 58
    adl_goal_description_star  go to state 127
    literal_term               go to state 59
    atomic_formula_term        go to state 60


state 93

   30 adl_goal_description: OPEN_PAREN EXISTS_TOK . OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 128


state 94

   46 binary_comp: GREATER_OR_EQUAL_TOK .

    $default  reduce using rule 46 (binary_comp)


state 95

   47 binary_comp: LESS_THAN_OR_EQUAL_TOK .

    $default  reduce using rule 47 (binary_comp)


state 96

   43 binary_comp: GREATER_TOK .

    $default  reduce using rule 43 (binary_comp)


state 97

   44 binary_comp: LESS_THAN_TOK .

    $default  reduce using rule 44 (binary_comp)


state 98

   33 f_comp: OPEN_PAREN binary_comp . f_exp f_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 130
    f_head           go to state 131
    num_exp          go to state 132
    number           go to state 69
    function_symbol  go to state 70


state 99

   61 atomic_formula_term: OPEN_PAREN predicate . term_star CLOSE_PAREN

    NAME      shift, and go to state 133
    VARIABLE  shift, and go to state 134

    $default  reduce using rule 62 (term_star)

    term_star  go to state 135
    term       go to state 136


state 100

   24 goal_def: OPEN_PAREN GOAL_TOK @3 adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 24 (goal_def)


state 101

  111 require_def: OPEN_PAREN REQUIREMENTS_TOK @4 NAME @5 . require_key_star CLOSE_PAREN

    NAME  shift, and go to state 137

    $default  reduce using rule 112 (require_key_star)

    require_key_star  go to state 138


state 102

   50 num_exp: OPEN_PAREN PLUS_TOK . num_exp num_exp CLOSE_PAREN
   88 ground_f_exp: OPEN_PAREN PLUS_TOK . ground_f_exp ground_f_exp CLOSE_PAREN
   97             | OPEN_PAREN PLUS_TOK . num_exp ground_f_exp CLOSE_PAREN
   98             | OPEN_PAREN PLUS_TOK . ground_f_exp num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 139
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 140


state 103

   48 num_exp: OPEN_PAREN MINUS_TOK . num_exp CLOSE_PAREN
   49        | OPEN_PAREN MINUS_TOK . num_exp num_exp CLOSE_PAREN
   86 ground_f_exp: OPEN_PAREN MINUS_TOK . ground_f_exp CLOSE_PAREN
   87             | OPEN_PAREN MINUS_TOK . ground_f_exp ground_f_exp CLOSE_PAREN
   95             | OPEN_PAREN MINUS_TOK . num_exp ground_f_exp CLOSE_PAREN
   96             | OPEN_PAREN MINUS_TOK . ground_f_exp num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 141
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 142


state 104

   51 num_exp: OPEN_PAREN MUL_TOK . num_exp num_exp CLOSE_PAREN
   89 ground_f_exp: OPEN_PAREN MUL_TOK . ground_f_exp ground_f_exp CLOSE_PAREN
  101             | OPEN_PAREN MUL_TOK . num_exp ground_f_exp CLOSE_PAREN
  102             | OPEN_PAREN MUL_TOK . ground_f_exp num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 143
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 144


state 105

   52 num_exp: OPEN_PAREN DIV_TOK . num_exp num_exp CLOSE_PAREN
   90 ground_f_exp: OPEN_PAREN DIV_TOK . ground_f_exp ground_f_exp CLOSE_PAREN
   99             | OPEN_PAREN DIV_TOK . num_exp ground_f_exp CLOSE_PAREN
  100             | OPEN_PAREN DIV_TOK . ground_f_exp num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 145
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 146


state 106

   41 f_head: OPEN_PAREN function_symbol . term_star CLOSE_PAREN
   42       | function_symbol .

    NAME      shift, and go to state 133
    VARIABLE  shift, and go to state 134

    CLOSE_PAREN  reduce using rule 42 (f_head)
    CLOSE_PAREN  [reduce using rule 62 (term_star)]
    $default     reduce using rule 42 (f_head)

    term_star  go to state 147
    term       go to state 136


state 107

   94 ground_f_exp: OPEN_PAREN ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 148


state 108

   83 metric_spec: OPEN_PAREN METRIC_TOK optimization ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 83 (metric_spec)


state 109

  105 ser_par: OPEN_PAREN SERIAL_TOK INTVAL . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 149


state 110

  106 ser_par: OPEN_PAREN PARALLEL_TOK INTVAL . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 150


state 111

  108 either: MINUS_TOK OPEN_PAREN EITHER_TOK .

    $default  reduce using rule 108 (either)


state 112

   67 name_plus: NAME name_plus .

    $default  reduce using rule 67 (name_plus)


state 113

   69 typed_list_name: NAME either name_plus CLOSE_PAREN . typed_list_name

    NAME  shift, and go to state 34

    $default  reduce using rule 68 (typed_list_name)

    typed_list_name  go to state 151


state 114

   80 atomic_formula_name: OPEN_PAREN . predicate name_star CLOSE_PAREN

    NAME       shift, and go to state 81
    EQUAL_TOK  shift, and go to state 152

    predicate  go to state 84


state 115

   78 literal_name: OPEN_PAREN NOT_TOK atomic_formula_name . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 153


state 116

   41 f_head: OPEN_PAREN . function_symbol term_star CLOSE_PAREN

    NAME  shift, and go to state 62

    function_symbol  go to state 154


state 117

   22 init_el: OPEN_PAREN EQUAL_TOK f_head . num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    num_exp  go to state 156
    number   go to state 69


state 118

   21 init_el: OPEN_PAREN TIMED_EL_TOK number . literal_name CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 157

    literal_name         go to state 158
    atomic_formula_name  go to state 55


state 119

   82 name_star: NAME . name_star

    NAME  shift, and go to state 119

    $default  reduce using rule 81 (name_star)

    name_star  go to state 159


state 120

   80 atomic_formula_name: OPEN_PAREN predicate name_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 160


state 121

   58 adl_goal_description_star: adl_goal_description . adl_goal_description_star

    OPEN_PAREN  shift, and go to state 56

    $default  reduce using rule 57 (adl_goal_description_star)

    adl_goal_description       go to state 121
    f_comp                     go to state 58
    adl_goal_description_star  go to state 161
    literal_term               go to state 59
    atomic_formula_term        go to state 60


state 122

   26 adl_goal_description: OPEN_PAREN AND_TOK adl_goal_description_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 162


state 123

   28 adl_goal_description: OPEN_PAREN NOT_TOK adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 163


state 124

   59 literal_term: OPEN_PAREN NOT_TOK atomic_formula_term . CLOSE_PAREN
   60             | atomic_formula_term .

    CLOSE_PAREN  shift, and go to state 164

    CLOSE_PAREN  [reduce using rule 60 (literal_term)]


state 125

   31 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN . typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

    VARIABLE  shift, and go to state 165

    $default  reduce using rule 72 (typed_list_variable)

    typed_list_variable  go to state 166


state 126

   29 adl_goal_description: OPEN_PAREN IMPLY_TOK adl_goal_description . adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 56

    adl_goal_description  go to state 167
    f_comp                go to state 58
    literal_term          go to state 59
    atomic_formula_term   go to state 60


state 127

   27 adl_goal_description: OPEN_PAREN OR_TOK adl_goal_description_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 168


state 128

   30 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN . typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN

    VARIABLE  shift, and go to state 165

    $default  reduce using rule 72 (typed_list_variable)

    typed_list_variable  go to state 169


state 129

   35 f_exp: OPEN_PAREN . MINUS_TOK f_exp CLOSE_PAREN
   36      | OPEN_PAREN . MINUS_TOK f_exp f_exp CLOSE_PAREN
   37      | OPEN_PAREN . PLUS_TOK f_exp f_exp CLOSE_PAREN
   38      | OPEN_PAREN . MUL_TOK f_exp f_exp CLOSE_PAREN
   39      | OPEN_PAREN . DIV_TOK f_exp f_exp CLOSE_PAREN
   41 f_head: OPEN_PAREN . function_symbol term_star CLOSE_PAREN
   48 num_exp: OPEN_PAREN . MINUS_TOK num_exp CLOSE_PAREN
   49        | OPEN_PAREN . MINUS_TOK num_exp num_exp CLOSE_PAREN
   50        | OPEN_PAREN . PLUS_TOK num_exp num_exp CLOSE_PAREN
   51        | OPEN_PAREN . MUL_TOK num_exp num_exp CLOSE_PAREN
   52        | OPEN_PAREN . DIV_TOK num_exp num_exp CLOSE_PAREN

    NAME       shift, and go to state 62
    PLUS_TOK   shift, and go to state 170
    MINUS_TOK  shift, and go to state 171
    MUL_TOK    shift, and go to state 172
    DIV_TOK    shift, and go to state 173

    function_symbol  go to state 154


state 130

   33 f_comp: OPEN_PAREN binary_comp f_exp . f_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 174
    f_head           go to state 131
    num_exp          go to state 132
    number           go to state 69
    function_symbol  go to state 70


state 131

   40 f_exp: f_head .

    $default  reduce using rule 40 (f_exp)


state 132

   34 f_exp: num_exp .

    $default  reduce using rule 34 (f_exp)


state 133

   64 term: NAME .

    $default  reduce using rule 64 (term)


state 134

   65 term: VARIABLE .

    $default  reduce using rule 65 (term)


state 135

   61 atomic_formula_term: OPEN_PAREN predicate term_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 175


state 136

   63 term_star: term . term_star

    NAME      shift, and go to state 133
    VARIABLE  shift, and go to state 134

    $default  reduce using rule 62 (term_star)

    term_star  go to state 176
    term       go to state 136


state 137

  114 require_key_star: NAME . @6 require_key_star

    $default  reduce using rule 113 (@6)

    @6  go to state 177


state 138

  111 require_def: OPEN_PAREN REQUIREMENTS_TOK @4 NAME @5 require_key_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 178


state 139

   50 num_exp: OPEN_PAREN PLUS_TOK num_exp . num_exp CLOSE_PAREN
   91 ground_f_exp: num_exp .
   97             | OPEN_PAREN PLUS_TOK num_exp . ground_f_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    NAME            [reduce using rule 91 (ground_f_exp)]
    OPEN_PAREN      [reduce using rule 91 (ground_f_exp)]
    INTVAL          [reduce using rule 91 (ground_f_exp)]
    FLOATVAL        [reduce using rule 91 (ground_f_exp)]
    TOTAL_TIME_TOK  [reduce using rule 91 (ground_f_exp)]

    f_head           go to state 67
    num_exp          go to state 179
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 180


state 140

   88 ground_f_exp: OPEN_PAREN PLUS_TOK ground_f_exp . ground_f_exp CLOSE_PAREN
   98             | OPEN_PAREN PLUS_TOK ground_f_exp . num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 181
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 182


state 141

   48 num_exp: OPEN_PAREN MINUS_TOK num_exp . CLOSE_PAREN
   49        | OPEN_PAREN MINUS_TOK num_exp . num_exp CLOSE_PAREN
   91 ground_f_exp: num_exp .
   95             | OPEN_PAREN MINUS_TOK num_exp . ground_f_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    CLOSE_PAREN     shift, and go to state 183
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    NAME            [reduce using rule 91 (ground_f_exp)]
    OPEN_PAREN      [reduce using rule 91 (ground_f_exp)]
    CLOSE_PAREN     [reduce using rule 91 (ground_f_exp)]
    INTVAL          [reduce using rule 91 (ground_f_exp)]
    FLOATVAL        [reduce using rule 91 (ground_f_exp)]
    TOTAL_TIME_TOK  [reduce using rule 91 (ground_f_exp)]

    f_head           go to state 67
    num_exp          go to state 184
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 185


state 142

   86 ground_f_exp: OPEN_PAREN MINUS_TOK ground_f_exp . CLOSE_PAREN
   87             | OPEN_PAREN MINUS_TOK ground_f_exp . ground_f_exp CLOSE_PAREN
   96             | OPEN_PAREN MINUS_TOK ground_f_exp . num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    CLOSE_PAREN     shift, and go to state 186
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 187
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 188


state 143

   51 num_exp: OPEN_PAREN MUL_TOK num_exp . num_exp CLOSE_PAREN
   91 ground_f_exp: num_exp .
  101             | OPEN_PAREN MUL_TOK num_exp . ground_f_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    NAME            [reduce using rule 91 (ground_f_exp)]
    OPEN_PAREN      [reduce using rule 91 (ground_f_exp)]
    INTVAL          [reduce using rule 91 (ground_f_exp)]
    FLOATVAL        [reduce using rule 91 (ground_f_exp)]
    TOTAL_TIME_TOK  [reduce using rule 91 (ground_f_exp)]

    f_head           go to state 67
    num_exp          go to state 189
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 190


state 144

   89 ground_f_exp: OPEN_PAREN MUL_TOK ground_f_exp . ground_f_exp CLOSE_PAREN
  102             | OPEN_PAREN MUL_TOK ground_f_exp . num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 191
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 192


state 145

   52 num_exp: OPEN_PAREN DIV_TOK num_exp . num_exp CLOSE_PAREN
   91 ground_f_exp: num_exp .
   99             | OPEN_PAREN DIV_TOK num_exp . ground_f_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    NAME            [reduce using rule 91 (ground_f_exp)]
    OPEN_PAREN      [reduce using rule 91 (ground_f_exp)]
    INTVAL          [reduce using rule 91 (ground_f_exp)]
    FLOATVAL        [reduce using rule 91 (ground_f_exp)]
    TOTAL_TIME_TOK  [reduce using rule 91 (ground_f_exp)]

    f_head           go to state 67
    num_exp          go to state 193
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 194


state 146

   90 ground_f_exp: OPEN_PAREN DIV_TOK ground_f_exp . ground_f_exp CLOSE_PAREN
  100             | OPEN_PAREN DIV_TOK ground_f_exp . num_exp CLOSE_PAREN

    NAME            shift, and go to state 62
    OPEN_PAREN      shift, and go to state 63
    INTVAL          shift, and go to state 64
    FLOATVAL        shift, and go to state 65
    TOTAL_TIME_TOK  shift, and go to state 66

    f_head           go to state 67
    num_exp          go to state 195
    number           go to state 69
    function_symbol  go to state 70
    ground_f_exp     go to state 196


state 147

   41 f_head: OPEN_PAREN function_symbol term_star . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 197


state 148

   94 ground_f_exp: OPEN_PAREN ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 94 (ground_f_exp)


state 149

  105 ser_par: OPEN_PAREN SERIAL_TOK INTVAL CLOSE_PAREN .

    $default  reduce using rule 105 (ser_par)


state 150

  106 ser_par: OPEN_PAREN PARALLEL_TOK INTVAL CLOSE_PAREN .

    $default  reduce using rule 106 (ser_par)


state 151

   69 typed_list_name: NAME either name_plus CLOSE_PAREN typed_list_name .

    $default  reduce using rule 69 (typed_list_name)


state 152

   77 predicate: EQUAL_TOK .

    $default  reduce using rule 77 (predicate)


state 153

   78 literal_name: OPEN_PAREN NOT_TOK atomic_formula_name CLOSE_PAREN .

    $default  reduce using rule 78 (literal_name)


state 154

   41 f_head: OPEN_PAREN function_symbol . term_star CLOSE_PAREN

    NAME      shift, and go to state 133
    VARIABLE  shift, and go to state 134

    $default  reduce using rule 62 (term_star)

    term_star  go to state 147
    term       go to state 136


state 155

   48 num_exp: OPEN_PAREN . MINUS_TOK num_exp CLOSE_PAREN
   49        | OPEN_PAREN . MINUS_TOK num_exp num_exp CLOSE_PAREN
   50        | OPEN_PAREN . PLUS_TOK num_exp num_exp CLOSE_PAREN
   51        | OPEN_PAREN . MUL_TOK num_exp num_exp CLOSE_PAREN
   52        | OPEN_PAREN . DIV_TOK num_exp num_exp CLOSE_PAREN

    PLUS_TOK   shift, and go to state 198
    MINUS_TOK  shift, and go to state 199
    MUL_TOK    shift, and go to state 200
    DIV_TOK    shift, and go to state 201


state 156

   22 init_el: OPEN_PAREN EQUAL_TOK f_head num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 202


state 157

   78 literal_name: OPEN_PAREN . NOT_TOK atomic_formula_name CLOSE_PAREN
   80 atomic_formula_name: OPEN_PAREN . predicate name_star CLOSE_PAREN

    NOT_TOK    shift, and go to state 80
    NAME       shift, and go to state 81
    EQUAL_TOK  shift, and go to state 152

    predicate  go to state 84


state 158

   21 init_el: OPEN_PAREN TIMED_EL_TOK number literal_name . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 203


state 159

   82 name_star: NAME name_star .

    $default  reduce using rule 82 (name_star)


state 160

   80 atomic_formula_name: OPEN_PAREN predicate name_star CLOSE_PAREN .

    $default  reduce using rule 80 (atomic_formula_name)


state 161

   58 adl_goal_description_star: adl_goal_description adl_goal_description_star .

    $default  reduce using rule 58 (adl_goal_description_star)


state 162

   26 adl_goal_description: OPEN_PAREN AND_TOK adl_goal_description_star CLOSE_PAREN .

    $default  reduce using rule 26 (adl_goal_description)


state 163

   28 adl_goal_description: OPEN_PAREN NOT_TOK adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 28 (adl_goal_description)


state 164

   59 literal_term: OPEN_PAREN NOT_TOK atomic_formula_term CLOSE_PAREN .

    $default  reduce using rule 59 (literal_term)


state 165

   73 typed_list_variable: VARIABLE . either name_plus CLOSE_PAREN typed_list_variable
   74                    | VARIABLE . type typed_list_variable
   75                    | VARIABLE . typed_list_variable

    VARIABLE   shift, and go to state 165
    MINUS_TOK  shift, and go to state 45

    $default  reduce using rule 72 (typed_list_variable)

    typed_list_variable  go to state 204
    type                 go to state 205
    either               go to state 206


state 166

   31 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable . CLOSE_PAREN adl_goal_description CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 207


state 167

   29 adl_goal_description: OPEN_PAREN IMPLY_TOK adl_goal_description adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 208


state 168

   27 adl_goal_description: OPEN_PAREN OR_TOK adl_goal_description_star CLOSE_PAREN .

    $default  reduce using rule 27 (adl_goal_description)


state 169

   30 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable . CLOSE_PAREN adl_goal_description CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 209


state 170

   37 f_exp: OPEN_PAREN PLUS_TOK . f_exp f_exp CLOSE_PAREN
   50 num_exp: OPEN_PAREN PLUS_TOK . num_exp num_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 210
    f_head           go to state 131
    num_exp          go to state 211
    number           go to state 69
    function_symbol  go to state 70


state 171

   35 f_exp: OPEN_PAREN MINUS_TOK . f_exp CLOSE_PAREN
   36      | OPEN_PAREN MINUS_TOK . f_exp f_exp CLOSE_PAREN
   48 num_exp: OPEN_PAREN MINUS_TOK . num_exp CLOSE_PAREN
   49        | OPEN_PAREN MINUS_TOK . num_exp num_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 212
    f_head           go to state 131
    num_exp          go to state 213
    number           go to state 69
    function_symbol  go to state 70


state 172

   38 f_exp: OPEN_PAREN MUL_TOK . f_exp f_exp CLOSE_PAREN
   51 num_exp: OPEN_PAREN MUL_TOK . num_exp num_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 214
    f_head           go to state 131
    num_exp          go to state 215
    number           go to state 69
    function_symbol  go to state 70


state 173

   39 f_exp: OPEN_PAREN DIV_TOK . f_exp f_exp CLOSE_PAREN
   52 num_exp: OPEN_PAREN DIV_TOK . num_exp num_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 216
    f_head           go to state 131
    num_exp          go to state 217
    number           go to state 69
    function_symbol  go to state 70


state 174

   33 f_comp: OPEN_PAREN binary_comp f_exp f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 218


state 175

   61 atomic_formula_term: OPEN_PAREN predicate term_star CLOSE_PAREN .

    $default  reduce using rule 61 (atomic_formula_term)


state 176

   63 term_star: term term_star .

    $default  reduce using rule 63 (term_star)


state 177

  114 require_key_star: NAME @6 . require_key_star

    NAME  shift, and go to state 137

    $default  reduce using rule 112 (require_key_star)

    require_key_star  go to state 219


state 178

  111 require_def: OPEN_PAREN REQUIREMENTS_TOK @4 NAME @5 require_key_star CLOSE_PAREN .

    $default  reduce using rule 111 (require_def)


state 179

   50 num_exp: OPEN_PAREN PLUS_TOK num_exp num_exp . CLOSE_PAREN
   91 ground_f_exp: num_exp .

    CLOSE_PAREN  shift, and go to state 220

    CLOSE_PAREN  [reduce using rule 91 (ground_f_exp)]


state 180

   97 ground_f_exp: OPEN_PAREN PLUS_TOK num_exp ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 221


state 181

   91 ground_f_exp: num_exp .
   98             | OPEN_PAREN PLUS_TOK ground_f_exp num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 222

    CLOSE_PAREN  [reduce using rule 91 (ground_f_exp)]


state 182

   88 ground_f_exp: OPEN_PAREN PLUS_TOK ground_f_exp ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 223


state 183

   48 num_exp: OPEN_PAREN MINUS_TOK num_exp CLOSE_PAREN .

    $default  reduce using rule 48 (num_exp)


state 184

   49 num_exp: OPEN_PAREN MINUS_TOK num_exp num_exp . CLOSE_PAREN
   91 ground_f_exp: num_exp .

    CLOSE_PAREN  shift, and go to state 224

    CLOSE_PAREN  [reduce using rule 91 (ground_f_exp)]


state 185

   95 ground_f_exp: OPEN_PAREN MINUS_TOK num_exp ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 225


state 186

   86 ground_f_exp: OPEN_PAREN MINUS_TOK ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 86 (ground_f_exp)


state 187

   91 ground_f_exp: num_exp .
   96             | OPEN_PAREN MINUS_TOK ground_f_exp num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 226

    CLOSE_PAREN  [reduce using rule 91 (ground_f_exp)]


state 188

   87 ground_f_exp: OPEN_PAREN MINUS_TOK ground_f_exp ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 227


state 189

   51 num_exp: OPEN_PAREN MUL_TOK num_exp num_exp . CLOSE_PAREN
   91 ground_f_exp: num_exp .

    CLOSE_PAREN  shift, and go to state 228

    CLOSE_PAREN  [reduce using rule 91 (ground_f_exp)]


state 190

  101 ground_f_exp: OPEN_PAREN MUL_TOK num_exp ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 229


state 191

   91 ground_f_exp: num_exp .
  102             | OPEN_PAREN MUL_TOK ground_f_exp num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 230

    CLOSE_PAREN  [reduce using rule 91 (ground_f_exp)]


state 192

   89 ground_f_exp: OPEN_PAREN MUL_TOK ground_f_exp ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 231


state 193

   52 num_exp: OPEN_PAREN DIV_TOK num_exp num_exp . CLOSE_PAREN
   91 ground_f_exp: num_exp .

    CLOSE_PAREN  shift, and go to state 232

    CLOSE_PAREN  [reduce using rule 91 (ground_f_exp)]


state 194

   99 ground_f_exp: OPEN_PAREN DIV_TOK num_exp ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 233


state 195

   91 ground_f_exp: num_exp .
  100             | OPEN_PAREN DIV_TOK ground_f_exp num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 234

    CLOSE_PAREN  [reduce using rule 91 (ground_f_exp)]


state 196

   90 ground_f_exp: OPEN_PAREN DIV_TOK ground_f_exp ground_f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 235


state 197

   41 f_head: OPEN_PAREN function_symbol term_star CLOSE_PAREN .

    $default  reduce using rule 41 (f_head)


state 198

   50 num_exp: OPEN_PAREN PLUS_TOK . num_exp num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    num_exp  go to state 236
    number   go to state 69


state 199

   48 num_exp: OPEN_PAREN MINUS_TOK . num_exp CLOSE_PAREN
   49        | OPEN_PAREN MINUS_TOK . num_exp num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    num_exp  go to state 237
    number   go to state 69


state 200

   51 num_exp: OPEN_PAREN MUL_TOK . num_exp num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    num_exp  go to state 238
    number   go to state 69


state 201

   52 num_exp: OPEN_PAREN DIV_TOK . num_exp num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    num_exp  go to state 239
    number   go to state 69


state 202

   22 init_el: OPEN_PAREN EQUAL_TOK f_head num_exp CLOSE_PAREN .

    $default  reduce using rule 22 (init_el)


state 203

   21 init_el: OPEN_PAREN TIMED_EL_TOK number literal_name CLOSE_PAREN .

    $default  reduce using rule 21 (init_el)


state 204

   75 typed_list_variable: VARIABLE typed_list_variable .

    $default  reduce using rule 75 (typed_list_variable)


state 205

   74 typed_list_variable: VARIABLE type . typed_list_variable

    VARIABLE  shift, and go to state 165

    $default  reduce using rule 72 (typed_list_variable)

    typed_list_variable  go to state 240


state 206

   73 typed_list_variable: VARIABLE either . name_plus CLOSE_PAREN typed_list_variable

    NAME  shift, and go to state 78

    name_plus  go to state 241


state 207

   31 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN . adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 56

    adl_goal_description  go to state 242
    f_comp                go to state 58
    literal_term          go to state 59
    atomic_formula_term   go to state 60


state 208

   29 adl_goal_description: OPEN_PAREN IMPLY_TOK adl_goal_description adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 29 (adl_goal_description)


state 209

   30 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN . adl_goal_description CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 56

    adl_goal_description  go to state 243
    f_comp                go to state 58
    literal_term          go to state 59
    atomic_formula_term   go to state 60


state 210

   37 f_exp: OPEN_PAREN PLUS_TOK f_exp . f_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 244
    f_head           go to state 131
    num_exp          go to state 132
    number           go to state 69
    function_symbol  go to state 70


state 211

   34 f_exp: num_exp .
   50 num_exp: OPEN_PAREN PLUS_TOK num_exp . num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    OPEN_PAREN  [reduce using rule 34 (f_exp)]
    INTVAL      [reduce using rule 34 (f_exp)]
    FLOATVAL    [reduce using rule 34 (f_exp)]
    $default    reduce using rule 34 (f_exp)

    num_exp  go to state 245
    number   go to state 69


state 212

   35 f_exp: OPEN_PAREN MINUS_TOK f_exp . CLOSE_PAREN
   36      | OPEN_PAREN MINUS_TOK f_exp . f_exp CLOSE_PAREN

    NAME         shift, and go to state 62
    OPEN_PAREN   shift, and go to state 129
    CLOSE_PAREN  shift, and go to state 246
    INTVAL       shift, and go to state 64
    FLOATVAL     shift, and go to state 65

    f_exp            go to state 247
    f_head           go to state 131
    num_exp          go to state 132
    number           go to state 69
    function_symbol  go to state 70


state 213

   34 f_exp: num_exp .
   48 num_exp: OPEN_PAREN MINUS_TOK num_exp . CLOSE_PAREN
   49        | OPEN_PAREN MINUS_TOK num_exp . num_exp CLOSE_PAREN

    OPEN_PAREN   shift, and go to state 155
    CLOSE_PAREN  shift, and go to state 183
    INTVAL       shift, and go to state 64
    FLOATVAL     shift, and go to state 65

    OPEN_PAREN   [reduce using rule 34 (f_exp)]
    CLOSE_PAREN  [reduce using rule 34 (f_exp)]
    INTVAL       [reduce using rule 34 (f_exp)]
    FLOATVAL     [reduce using rule 34 (f_exp)]
    $default     reduce using rule 34 (f_exp)

    num_exp  go to state 248
    number   go to state 69


state 214

   38 f_exp: OPEN_PAREN MUL_TOK f_exp . f_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 249
    f_head           go to state 131
    num_exp          go to state 132
    number           go to state 69
    function_symbol  go to state 70


state 215

   34 f_exp: num_exp .
   51 num_exp: OPEN_PAREN MUL_TOK num_exp . num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    OPEN_PAREN  [reduce using rule 34 (f_exp)]
    INTVAL      [reduce using rule 34 (f_exp)]
    FLOATVAL    [reduce using rule 34 (f_exp)]
    $default    reduce using rule 34 (f_exp)

    num_exp  go to state 250
    number   go to state 69


state 216

   39 f_exp: OPEN_PAREN DIV_TOK f_exp . f_exp CLOSE_PAREN

    NAME        shift, and go to state 62
    OPEN_PAREN  shift, and go to state 129
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    f_exp            go to state 251
    f_head           go to state 131
    num_exp          go to state 132
    number           go to state 69
    function_symbol  go to state 70


state 217

   34 f_exp: num_exp .
   52 num_exp: OPEN_PAREN DIV_TOK num_exp . num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    OPEN_PAREN  [reduce using rule 34 (f_exp)]
    INTVAL      [reduce using rule 34 (f_exp)]
    FLOATVAL    [reduce using rule 34 (f_exp)]
    $default    reduce using rule 34 (f_exp)

    num_exp  go to state 252
    number   go to state 69


state 218

   33 f_comp: OPEN_PAREN binary_comp f_exp f_exp CLOSE_PAREN .

    $default  reduce using rule 33 (f_comp)


state 219

  114 require_key_star: NAME @6 require_key_star .

    $default  reduce using rule 114 (require_key_star)


state 220

   50 num_exp: OPEN_PAREN PLUS_TOK num_exp num_exp CLOSE_PAREN .

    $default  reduce using rule 50 (num_exp)


state 221

   97 ground_f_exp: OPEN_PAREN PLUS_TOK num_exp ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 97 (ground_f_exp)


state 222

   98 ground_f_exp: OPEN_PAREN PLUS_TOK ground_f_exp num_exp CLOSE_PAREN .

    $default  reduce using rule 98 (ground_f_exp)


state 223

   88 ground_f_exp: OPEN_PAREN PLUS_TOK ground_f_exp ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 88 (ground_f_exp)


state 224

   49 num_exp: OPEN_PAREN MINUS_TOK num_exp num_exp CLOSE_PAREN .

    $default  reduce using rule 49 (num_exp)


state 225

   95 ground_f_exp: OPEN_PAREN MINUS_TOK num_exp ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 95 (ground_f_exp)


state 226

   96 ground_f_exp: OPEN_PAREN MINUS_TOK ground_f_exp num_exp CLOSE_PAREN .

    $default  reduce using rule 96 (ground_f_exp)


state 227

   87 ground_f_exp: OPEN_PAREN MINUS_TOK ground_f_exp ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 87 (ground_f_exp)


state 228

   51 num_exp: OPEN_PAREN MUL_TOK num_exp num_exp CLOSE_PAREN .

    $default  reduce using rule 51 (num_exp)


state 229

  101 ground_f_exp: OPEN_PAREN MUL_TOK num_exp ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 101 (ground_f_exp)


state 230

  102 ground_f_exp: OPEN_PAREN MUL_TOK ground_f_exp num_exp CLOSE_PAREN .

    $default  reduce using rule 102 (ground_f_exp)


state 231

   89 ground_f_exp: OPEN_PAREN MUL_TOK ground_f_exp ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 89 (ground_f_exp)


state 232

   52 num_exp: OPEN_PAREN DIV_TOK num_exp num_exp CLOSE_PAREN .

    $default  reduce using rule 52 (num_exp)


state 233

   99 ground_f_exp: OPEN_PAREN DIV_TOK num_exp ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 99 (ground_f_exp)


state 234

  100 ground_f_exp: OPEN_PAREN DIV_TOK ground_f_exp num_exp CLOSE_PAREN .

    $default  reduce using rule 100 (ground_f_exp)


state 235

   90 ground_f_exp: OPEN_PAREN DIV_TOK ground_f_exp ground_f_exp CLOSE_PAREN .

    $default  reduce using rule 90 (ground_f_exp)


state 236

   50 num_exp: OPEN_PAREN PLUS_TOK num_exp . num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    num_exp  go to state 245
    number   go to state 69


state 237

   48 num_exp: OPEN_PAREN MINUS_TOK num_exp . CLOSE_PAREN
   49        | OPEN_PAREN MINUS_TOK num_exp . num_exp CLOSE_PAREN

    OPEN_PAREN   shift, and go to state 155
    CLOSE_PAREN  shift, and go to state 183
    INTVAL       shift, and go to state 64
    FLOATVAL     shift, and go to state 65

    num_exp  go to state 248
    number   go to state 69


state 238

   51 num_exp: OPEN_PAREN MUL_TOK num_exp . num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    num_exp  go to state 250
    number   go to state 69


state 239

   52 num_exp: OPEN_PAREN DIV_TOK num_exp . num_exp CLOSE_PAREN

    OPEN_PAREN  shift, and go to state 155
    INTVAL      shift, and go to state 64
    FLOATVAL    shift, and go to state 65

    num_exp  go to state 252
    number   go to state 69


state 240

   74 typed_list_variable: VARIABLE type typed_list_variable .

    $default  reduce using rule 74 (typed_list_variable)


state 241

   73 typed_list_variable: VARIABLE either name_plus . CLOSE_PAREN typed_list_variable

    CLOSE_PAREN  shift, and go to state 253


state 242

   31 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 254


state 243

   30 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 255


state 244

   37 f_exp: OPEN_PAREN PLUS_TOK f_exp f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 256


state 245

   50 num_exp: OPEN_PAREN PLUS_TOK num_exp num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 220


state 246

   35 f_exp: OPEN_PAREN MINUS_TOK f_exp CLOSE_PAREN .

    $default  reduce using rule 35 (f_exp)


state 247

   36 f_exp: OPEN_PAREN MINUS_TOK f_exp f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 257


state 248

   49 num_exp: OPEN_PAREN MINUS_TOK num_exp num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 224


state 249

   38 f_exp: OPEN_PAREN MUL_TOK f_exp f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 258


state 250

   51 num_exp: OPEN_PAREN MUL_TOK num_exp num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 228


state 251

   39 f_exp: OPEN_PAREN DIV_TOK f_exp f_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 259


state 252

   52 num_exp: OPEN_PAREN DIV_TOK num_exp num_exp . CLOSE_PAREN

    CLOSE_PAREN  shift, and go to state 232


state 253

   73 typed_list_variable: VARIABLE either name_plus CLOSE_PAREN . typed_list_variable

    VARIABLE  shift, and go to state 165

    $default  reduce using rule 72 (typed_list_variable)

    typed_list_variable  go to state 260


state 254

   31 adl_goal_description: OPEN_PAREN FORALL_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 31 (adl_goal_description)


state 255

   30 adl_goal_description: OPEN_PAREN EXISTS_TOK OPEN_PAREN typed_list_variable CLOSE_PAREN adl_goal_description CLOSE_PAREN .

    $default  reduce using rule 30 (adl_goal_description)


state 256

   37 f_exp: OPEN_PAREN PLUS_TOK f_exp f_exp CLOSE_PAREN .

    $default  reduce using rule 37 (f_exp)


state 257

   36 f_exp: OPEN_PAREN MINUS_TOK f_exp f_exp CLOSE_PAREN .

    $default  reduce using rule 36 (f_exp)


state 258

   38 f_exp: OPEN_PAREN MUL_TOK f_exp f_exp CLOSE_PAREN .

    $default  reduce using rule 38 (f_exp)


state 259

   39 f_exp: OPEN_PAREN DIV_TOK f_exp f_exp CLOSE_PAREN .

    $default  reduce using rule 39 (f_exp)


state 260

   73 typed_list_variable: VARIABLE either name_plus CLOSE_PAREN typed_list_variable .

    $default  reduce using rule 73 (typed_list_variable)
